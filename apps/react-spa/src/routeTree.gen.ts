/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as CheckoutRouteImport } from './routes/checkout'
import { Route as BrowseRouteImport } from './routes/browse'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ProductProductIdRouteImport } from './routes/product.$productId'

const CheckoutRoute = CheckoutRouteImport.update({
  id: '/checkout',
  path: '/checkout',
  getParentRoute: () => rootRouteImport,
} as any)
const BrowseRoute = BrowseRouteImport.update({
  id: '/browse',
  path: '/browse',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProductProductIdRoute = ProductProductIdRouteImport.update({
  id: '/product/$productId',
  path: '/product/$productId',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/browse': typeof BrowseRoute
  '/checkout': typeof CheckoutRoute
  '/product/$productId': typeof ProductProductIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/browse': typeof BrowseRoute
  '/checkout': typeof CheckoutRoute
  '/product/$productId': typeof ProductProductIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/browse': typeof BrowseRoute
  '/checkout': typeof CheckoutRoute
  '/product/$productId': typeof ProductProductIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/browse' | '/checkout' | '/product/$productId'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/browse' | '/checkout' | '/product/$productId'
  id: '__root__' | '/' | '/browse' | '/checkout' | '/product/$productId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  BrowseRoute: typeof BrowseRoute
  CheckoutRoute: typeof CheckoutRoute
  ProductProductIdRoute: typeof ProductProductIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/checkout': {
      id: '/checkout'
      path: '/checkout'
      fullPath: '/checkout'
      preLoaderRoute: typeof CheckoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/browse': {
      id: '/browse'
      path: '/browse'
      fullPath: '/browse'
      preLoaderRoute: typeof BrowseRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/product/$productId': {
      id: '/product/$productId'
      path: '/product/$productId'
      fullPath: '/product/$productId'
      preLoaderRoute: typeof ProductProductIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  BrowseRoute: BrowseRoute,
  CheckoutRoute: CheckoutRoute,
  ProductProductIdRoute: ProductProductIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
